"""
===============================================================================
                    LAYOUT MEJORADO PARA AN√ÅLISIS SATELITAL
===============================================================================

Layout profesional optimizado para el an√°lisis de datos satelitales agr√≠colas.
Dise√±ado espec√≠ficamente para trabajar en conjunto con los callbacks del m√≥dulo
datos_satelitales.py, proporcionando una interfaz completa y user-friendly.

Caracter√≠sticas principales:
‚Ä¢ Base cartogr√°fica satelital (Esri World Imagery) de alta resoluci√≥n
‚Ä¢ Sistema de controles intuitivos para configuraci√≥n de an√°lisis
‚Ä¢ Mapeo 1:1 de IDs con callbacks para sincronizaci√≥n perfecta
‚Ä¢ Visualizaci√≥n avanzada de √≠ndices de vegetaci√≥n (NDVI, OSAVI, NDRE)
‚Ä¢ Panel de an√°lisis hist√≥rico con animaciones temporales
‚Ä¢ Comparaci√≥n temporal inteligente entre per√≠odos
‚Ä¢ Detecci√≥n autom√°tica de anomal√≠as y alertas de cultivo
‚Ä¢ Sistema de overlays din√°micos con leyendas interactivas
‚Ä¢ Integraci√≥n completa con datos de fincas registradas

Componentes t√©cnicos:
‚Ä¢ Controles de per√≠odo y selecci√≥n de √°rea avanzados
‚Ä¢ Mapas interactivos con capas especializadas por √≠ndice
‚Ä¢ KPIs autom√°ticos y m√©tricas de salud de cultivo
‚Ä¢ An√°lisis comparativo entre fechas con visualizaciones
‚Ä¢ Sistema de animaci√≥n temporal para evoluci√≥n de √≠ndices
‚Ä¢ Herramientas de exportaci√≥n y an√°lisis de datos

Integraci√≥n con callbacks:
‚Ä¢ Sincronizaci√≥n perfecta con datos_satelitales.py
‚Ä¢ IDs de componentes alineados para callbacks espec√≠ficos
‚Ä¢ Stores compartidos para intercambio de datos eficiente

Autor: Sistema de Monitoreo Agr√≠cola
Versi√≥n: 2.1 Enhanced
√öltima actualizaci√≥n: 2025

===============================================================================
"""

# ===============================================================================
#                                 IMPORTS
# ===============================================================================

# Librer√≠as est√°ndar
import datetime
import logging

# Framework Dash
from dash import html, dcc
import dash_bootstrap_components as dbc
import dash_leaflet as dl

# Utilidades del proyecto
from src.utils.finca_store import list_fincas
from src.app.app_config import AGRI_THEME
import config_colormaps as cfg
from utils.api_quota_manager import get_quota_monitor

# Configuraci√≥n de logging
logger = logging.getLogger(__name__)

# ===============================================================================
#                           FUNCIONES AUXILIARES
# ===============================================================================

def _saved_fincas_layer():
    """
    Construye capa GeoJSON con las fincas registradas en el sistema.
    
    Genera una capa de visualizaci√≥n que muestra todas las propiedades
    agr√≠colas previamente registradas por el usuario, permitiendo su
    selecci√≥n para an√°lisis satelital espec√≠fico.
    
    Returns:
        dl.GeoJSON: Componente Dash Leaflet con geometr√≠as de fincas
                   estilizadas seg√∫n el tema de la aplicaci√≥n
                   
    Features:
        ‚Ä¢ Carga autom√°tica de fincas desde el sistema de almacenamiento
        ‚Ä¢ Estilizado consistente con el tema de la aplicaci√≥n
        ‚Ä¢ Efectos hover para mejor interacci√≥n usuario
        ‚Ä¢ Manejo robusto de errores en datos malformados
        ‚Ä¢ Preparaci√≥n de propiedades para callbacks
    """
    # Obtener lista de fincas del sistema de almacenamiento
    fincas = list_fincas() or []
    features = []
    
    # Procesar cada finca registrada
    for finca in fincas:
        try:
            # Validar estructura de datos b√°sica
            if isinstance(finca, dict) and finca.get("geometry"):
                # Construir feature GeoJSON v√°lido
                feature = {
                    "type": "Feature",
                    "geometry": finca["geometry"],
                    "properties": {
                        **finca.get("properties", {}),
                        "id": finca.get("id")
                    }
                }
                features.append(feature)
                
        except Exception as e:
            # Continuar con siguiente finca si hay error en una espec√≠fica
            logger.debug(f"Error procesando finca: {e}")
            continue

    # Retornar capa GeoJSON configurada
    return dl.GeoJSON(
        id="saved-fincas-layer",
        data={
            "type": "FeatureCollection", 
            "features": features
        },
        options={
            "style": {
                "color": AGRI_THEME["colors"]["primary"], 
                "weight": 2, 
                "fillOpacity": 0.05
            }
        },
        hoverStyle={
            "weight": 3, 
            "color": AGRI_THEME["colors"]["success"], 
            "fillOpacity": 0.10
        },
        zoomToBounds=False,
    )

def _create_api_quota_monitor():
    """
    Crea componente din√°mico de monitoreo de cuota API satelital.
    
    Proporciona informaci√≥n visual sobre el uso de la API de Copernicus,
    mostrando estad√≠sticas de consumo que se actualizan autom√°ticamente.
    
    Returns:
        dbc.Card: Componente visual con informaci√≥n de uso de API
    """
    return html.Div(id="api-quota-monitor-container")

# ===============================================================================
#                        FUNCI√ìN PRINCIPAL DE CONSTRUCCI√ìN
# ===============================================================================

def build_scientific_satellite_layout():
    """
    Construye el layout cient√≠fico completo para an√°lisis satelital avanzado.
    
    Genera una interfaz profesional y comprehensiva dise√±ada espec√≠ficamente
    para el an√°lisis de datos satelitales agr√≠colas. La funci√≥n coordina la
    creaci√≥n de todos los componentes necesarios para un sistema completo
    de monitoreo satelital.
    
    Architecture:
        ‚Ä¢ Sistema de controles en dos niveles (b√°sicos y avanzados)
        ‚Ä¢ Mapas interactivos con m√∫ltiples capas especializadas
        ‚Ä¢ Paneles de an√°lisis temporal y comparativo
        ‚Ä¢ Sistema de stores para manejo de estado
        ‚Ä¢ Componentes de animaci√≥n y visualizaci√≥n hist√≥rica
        
    Returns:
        html.Div: Layout completo del m√≥dulo satelital con todos los
                 componentes necesarios para an√°lisis profesional
                 
    Note:
        Esta funci√≥n debe mantenerse sincronizada con los callbacks
        en datos_satelitales.py para garantizar funcionalidad completa.
    """

    # ===================================================================
    #                    PREPARACI√ìN DE DATOS BASE
    # ===================================================================
    fincas = list_fincas() or []
    fincas_options = [{"label": "üéØ An√°lisis temporal (dibujar √°rea)", "value": "temporal"}]
    for f in fincas:
        name = f.get("properties", {}).get("name", "Sin nombre")
        crop = f.get("properties", {}).get("crop_type", "")
        area = f.get("properties", {}).get("area", "")
        label = " ".join([p for p in [f"üåø " + name, f"({crop})" if crop else "", f"- {area} ha" if area else ""] if p])
        fincas_options.append({"label": label, "value": f.get("id")})

    today = datetime.date.today()
    hist_start = today - datetime.timedelta(days=180)

    colormap_options = [{"label": k.replace("_", " ").title(), "value": k} for k in getattr(cfg, "NDVI_COLORMAPS_DEF", {}).keys()]
    default_cmap = getattr(cfg, "NDVI_COLORMAP", (colormap_options[0]["value"] if colormap_options else "viridis"))

    # ===================================================================
    #                    STORES DE ESTADO COMPARTIDO
    # ===================================================================
    # Configuraci√≥n de almacenes de estado para intercambio de datos
    # entre componentes y callbacks del sistema satelital
    stores = html.Div([
        # Geometr√≠a seleccionada por el usuario (√°rea de an√°lisis)
        dcc.Store(id="selected-geometry", storage_type="memory"),
        
        # L√≠mites geoespaciales para overlays de mapas
        dcc.Store(id="overlay-bounds", storage_type="memory"),
        
        # Resumen estad√≠stico del an√°lisis actual
        dcc.Store(id="analysis-summary", storage_type="memory"),
        
        # Datos NDVI raw para procesamiento
        dcc.Store(id="raw-ndvi-data-store", storage_type="memory"),
        
        # A√±os de referencia para an√°lisis de anomal√≠as
        dcc.Store(id="reference-years-store", data=[2024, 2023, 2022]),
        
        # Datos hist√≥ricos agregados
        dcc.Store(id="historical-data-store", storage_type="memory"),
        
        # Frames para animaciones temporales
        dcc.Store(id="anim-frames-store", storage_type="memory"),
        
        # Datos para comparaci√≥n temporal entre per√≠odos
        dcc.Store(id="comparison-data-store", storage_type="memory"),
        
        # Estados de carga
        dcc.Store(id="satellite-busy", data=False),
    ])

    # ===================================================================
    #                    CONTROLES PRINCIPALES BALANCEADOS
    # ===================================================================
    controls_top = html.Div([
        # Primera fila: Controles principales
        dbc.Row([
            # Selecci√≥n de √°rea
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-map-marked-alt me-2"), "Seleccionar √°rea de an√°lisis"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    dcc.Dropdown(
                        id="analysis-mode-selector",
                        options=fincas_options,
                        value="temporal",
                        clearable=False,
                        className="mb-2"
                    ),
                    html.Small("Elige una finca registrada o dibuja un pol√≠gono en el mapa", 
                              className="text-muted", 
                              style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ]), style={
                    "borderRadius": "12px",
                    "backgroundColor": AGRI_THEME["colors"]["bg_card"],
                    "border": f"1px solid {AGRI_THEME['colors']['border_light']}",
                    "boxShadow": f"0 2px 8px {AGRI_THEME['colors']['shadow']}",
                    "fontFamily": AGRI_THEME["fonts"]["primary"]
                }), md=4, className="mb-3"
            ),
            
            # Per√≠odo de an√°lisis
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-calendar-alt me-2"), "Per√≠odo de an√°lisis"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    dcc.DatePickerRange(
                        id="ndvi-date-range",
                        start_date=hist_start,
                        end_date=today,
                        display_format="DD/MM/YYYY",
                        className="mb-2", 
                        style={"width": "100%"}
                    ),
                    html.Small("Rango de fechas para el an√°lisis satelital", 
                              className="text-muted",
                              style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ]), className="satellite-control-card"), md=4, className="mb-3"
            ),
            
            # Botones de acci√≥n
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-play me-2"), "Ejecutar an√°lisis"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    html.Div([
                        dbc.Button(
                            [html.I(className="fas fa-satellite me-2"), "An√°lisis Actual"],
                            id="run-analysis-btn", 
                            color="primary", 
                            className="w-100 mb-2",
                            size="md"
                        )
                    ]),
                ]), className="satellite-control-card"), md=4, className="mb-3"
            ),
        ], className="mb-3"),
        
        # Segunda fila: A√±os de referencia + √çndices + Color
        dbc.Row([
            # A√±os de referencia para anomal√≠as
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-database me-2"), "A√±os de referencia para anomal√≠as"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    dcc.Checklist(
                        id="reference-years-list", 
                        options=[], 
                        value=[2024, 2023, 2022], 
                        inline=True, 
                        className="mb-2"
                    ),
                    dbc.InputGroup([
                        dbc.Input(
                            id="reference-year-input", 
                            type="number", 
                            min=2015, 
                            max=today.year,
                            placeholder="A√±adir a√±o (ej. 2021)", 
                            debounce=True
                        ),
                        dbc.Button(
                            [html.I(className="fas fa-plus me-1"), "A√±adir"], 
                            id="add-reference-year-btn", 
                            color="secondary", 
                            n_clicks=0
                        ),
                    ], className="mb-2"),
                    html.Small("Selecciona a√±os para comparar y detectar anomal√≠as", 
                              className="text-muted",
                              style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ]), className="satellite-control-card"), md=5, className="mb-3"
            ),
            
            # √çndices de vegetaci√≥n
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-leaf me-2"), "√çndices de vegetaci√≥n"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    dcc.Dropdown(
                        id="analysis-index-selector",
                        options=[
                            {"label":"üå± NDVI (Vigor vegetativo)","value":"NDVI"},
                            {"label":"üåø OSAVI (Suelo optimizado)","value":"OSAVI"},
                            {"label":"üçÉ NDRE (Estr√©s h√≠drico)","value":"NDRE"}
                        ],
                        value="NDVI", 
                        clearable=False,
                        className="mb-2"
                    ),
                    dcc.Checklist(
                        id="index-checklist",
                        options=[
                            {"label":"üå± NDVI","value":"NDVI"},
                            {"label":"üåø OSAVI","value":"OSAVI"},
                            {"label":"üçÉ NDRE","value":"NDRE"}
                        ],
                        value=["NDVI"], 
                        className="mb-2"
                    ),
                    html.Small("Selecciona los √≠ndices a calcular", 
                              className="text-muted",
                              style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ]), className="satellite-control-card"), md=4, className="mb-3"
            ),
            
            # Escala de color
            dbc.Col(
                dbc.Card(dbc.CardBody([
                    dbc.Label([html.I(className="fas fa-palette me-2"), "Escala de color"], 
                             className="fw-bold mb-2",
                             style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    dcc.Dropdown(
                        id="ndvi-colormap-selector",
                        options=colormap_options,
                        value=default_cmap, 
                        clearable=False, 
                        className="mb-2"
                    ),
                    html.Small("Paleta de colores para visualizar los √≠ndices", 
                              className="text-muted",
                              style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ]), className="satellite-control-card"), md=3, className="mb-3"
            ),
        ])
    ], className="controls-section mb-4")

    # ===================================================================
    #                    INFORMACI√ìN CONTEXTUAL
    # ===================================================================
    controls_refs = dbc.Row([
        dbc.Col(
            dbc.Alert([
                html.I(className="fas fa-info-circle me-2"),
                html.Strong("Consejo: "),
                "Los a√±os de referencia te ayudan a detectar anomal√≠as comparando con temporadas anteriores."
            ], color="info", className="mb-0", style={"fontSize": "0.9rem"}), 
            md=12
        )
    ], className="mb-3")

    # ===================================================================
    #                    CONTROLES AVANZADOS COLAPSABLES
    # ===================================================================
    advanced_controls = dbc.Row([
        dbc.Col([
            dbc.Button([
                html.I(className="fas fa-cog me-2"),
                "Configuraci√≥n Avanzada"
            ], id="toggle-advanced-btn", color="outline-secondary", size="sm"),
            dbc.Collapse([
                dbc.Card(dbc.CardBody([
                    html.P("Configuraciones avanzadas aparecer√°n aqu√≠", className="text-muted small")
                ]))
            ], id="advanced-controls-collapse", is_open=False)
        ], md=12)
    ], className="mb-3")

    # ===================================================================
    #                    MAPA SATELITAL INTERACTIVO
    # ===================================================================
    # Control de dibujo para definir √°reas de an√°lisis
    draw_control = dl.EditControl(
        id="bbox-draw-control",
        position="topleft",
        draw={
            "polyline": False,     # Deshabilitar l√≠neas
            "rectangle": False,    # Deshabilitar rect√°ngulos
            "circle": False,       # Deshabilitar c√≠rculos
            "circlemarker": False, # Deshabilitar marcadores circulares
            "marker": False,       # Deshabilitar marcadores puntuales
            "polygon": {
                "shapeOptions": {
                    "color": AGRI_THEME["colors"]["success"], 
                    "weight": 2, 
                    "fillOpacity": 0.05
                }
            },
        },
        edit={"remove": True, "edit": True},  # Permitir edici√≥n y eliminaci√≥n
    )

    map_card = dbc.Card(dbc.CardBody([
        dl.Map(
            id="sat-map",
            center=[37.25, -3.6], zoom=12, preferCanvas=True,
            style={"width": "100%", "height": "560px", "zIndex": 0, "borderRadius": "8px"},
            children=[
                dl.LayersControl(position="topright", children=[
                    dl.BaseLayer(
                        dl.TileLayer(
                            id="base-tile-layer",
                            url="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",
                            attribution="&copy; Esri"
                        ),
                        name="üõ∞Ô∏è Sat√©lite", checked=True
                    ),
                    dl.BaseLayer(
                        dl.TileLayer(
                            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
                            attribution="&copy; OpenStreetMap"
                        ),
                        name="üó∫Ô∏è Calles", checked=False
                    ),
                    dl.Overlay(_saved_fincas_layer(), name="Fincas guardadas", checked=True),
                    dl.Overlay(
                        dl.GeoJSON(id="selected-finca-overlay",
                                   data={"type":"FeatureCollection","features":[]},
                                   options={"style":{"color": AGRI_THEME["colors"]["warning"], "weight":2, "fillOpacity":0.05}},
                                   zoomToBounds=True),
                        name="üéØ Finca seleccionada", checked=True
                    ),
                    # Overlays raster (los callbacks actualizan url/bounds/opacity)
                    dl.Overlay(dl.ImageOverlay(id="dynamic-ndvi-overlay", url="", bounds=[[0,0],[0,0]], opacity=0), name="üå± NDVI", checked=True),
                    dl.Overlay(dl.ImageOverlay(id="dynamic-osavi-overlay", url="", bounds=[[0,0],[0,0]], opacity=0), name="üåø OSAVI", checked=False),
                    dl.Overlay(dl.ImageOverlay(id="dynamic-ndre-overlay", url="", bounds=[[0,0],[0,0]], opacity=0), name="üçÉ NDRE", checked=False),
                    dl.Overlay(dl.ImageOverlay(id="anomaly-ndvi-overlay", url="", bounds=[[0,0],[0,0]], opacity=0), name="‚ö†Ô∏è Anomal√≠as NDVI", checked=False),
                ]),
                dl.FeatureGroup([draw_control], id="feature-group"),
            ]
        ),
        # Overlay de carga para el mapa satelital
        html.Div(
            id="satellite-map-loading-overlay",
            children=html.Div([
                dbc.Spinner(size="lg", color="primary"),
                html.Div("Procesando datos satelitales‚Ä¶", className="mt-2 text-muted fw-bold")
            ], className="text-center p-4"),
            style={
                'display': 'none', 
                'position': 'absolute', 
                'inset': 0,
                'background': 'rgba(255,255,255,0.85)', 
                'borderRadius': '8px',
                'zIndex': 1000,
                'alignItems': 'center',
                'justifyContent': 'center'
            }
        ),
        html.Div(id="loading-indicator", className="satellite-loading mt-2"),
    ], style={'position': 'relative'}), className="satellite-map-card")


    # ===================================================================
    #                    SECCI√ìN COMPARACI√ìN TEMPORAL
    # ===================================================================
    comparison_section = dbc.Card(dbc.CardBody([
        html.H5([html.I(className="fas fa-exchange-alt me-2"), "Comparaci√≥n Temporal de √çndices"], 
                className="fw-bold mb-3",
                style={"color": AGRI_THEME["colors"]["info"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
        
        dbc.Row([
            dbc.Col([
                dbc.Label([html.I(className="fas fa-calendar me-2"), "Per√≠odo 1 (Referencia)"], 
                         className="fw-bold mb-2",
                         style={"color": AGRI_THEME["colors"]["text_primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                dcc.DatePickerRange(
                    id="comparison-range1",
                    start_date=today - datetime.timedelta(days=37),
                    end_date=today - datetime.timedelta(days=30),
                    display_format="DD/MM/YYYY",
                    style={"width": "100%"}
                ),
                html.Small("Rango de fechas para el primer per√≠odo", 
                          className="text-muted", 
                          style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
            ], md=3),
            
            dbc.Col([
                dbc.Label([html.I(className="fas fa-calendar-plus me-2"), "Per√≠odo 2 (Comparaci√≥n)"], 
                         className="fw-bold mb-2",
                         style={"color": AGRI_THEME["colors"]["text_primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                dcc.DatePickerRange(
                    id="comparison-range2",
                    start_date=today - datetime.timedelta(days=7),
                    end_date=today,
                    display_format="DD/MM/YYYY", 
                    style={"width": "100%"}
                ),
                html.Small("Rango de fechas para el segundo per√≠odo", 
                          className="text-muted",
                          style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
            ], md=3),
            
            dbc.Col([
                dbc.Label([html.I(className="fas fa-seedling me-2"), "√çndices a Comparar"], 
                         className="fw-bold mb-2",
                         style={"color": AGRI_THEME["colors"]["text_primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                dcc.Checklist(
                    id="comparison-indices",
                    options=[
                        {"label": "üå± NDVI", "value": "NDVI"},
                        {"label": "üåø OSAVI", "value": "OSAVI"},
                        {"label": "üçÉ NDRE", "value": "NDRE"}
                    ],
                    value=["NDVI", "OSAVI"],
                    inline=True,
                    style={"fontFamily": AGRI_THEME["fonts"]["primary"]}
                ),
                html.Small("Elige los √≠ndices para el an√°lisis comparativo", 
                          className="text-muted",
                          style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
            ], md=4),
            
            dbc.Col([
                dbc.Label("Acci√≥n", className="fw-bold mb-2",
                         style={"color": AGRI_THEME["colors"]["text_primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                html.Div([
                    dbc.Button([html.I(className="fas fa-analytics me-2"), "Comparar"],
                               id="run-comparison-btn", 
                               color="info",
                               style={
                                   "width": "100%",
                                   "borderRadius": "8px",
                                   "fontWeight": "600",
                                   "fontFamily": AGRI_THEME["fonts"]["primary"]
                               }),
                ], className="d-grid")
            ], md=2),
        ], className="g-3 mb-4"),

        # Contenedor para resultados de comparaci√≥n simplificado
        html.Div(id="comparison-results-section", style={"display": "none"}, children=[
            html.Hr(),
            html.H6([html.I(className="fas fa-chart-line me-2"), "Resultados del An√°lisis"],
                    className="fw-bold mb-3",
                    style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            
            # KPIs de comparaci√≥n simplificados
            html.Div(id="comparison-kpis", className="mb-4"),
            
            # An√°lisis simplificado para agricultores
            html.Div([
                html.H6([html.I(className="fas fa-chart-column me-2"), "¬øC√≥mo ha Cambiado tu Cultivo?"], 
                       className="fw-bold mb-2", 
                       style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                html.P("An√°lisis comparativo entre dos per√≠odos: qu√© porcentaje ha mejorado, empeorado o se mantiene igual", 
                      className="small text-muted mb-3",
                      style={"fontFamily": AGRI_THEME["fonts"]["primary"]}),
                html.Div(id="comparison-scatter-chart"),
                html.Div(id="comparison-difference-chart", className="mt-3")
            ], className="mb-3")
        ])
        
    ]), style={
        "borderRadius": "12px", 
        "backgroundColor": AGRI_THEME["colors"]["bg_card"],
        "border": f"1px solid {AGRI_THEME['colors']['border_light']}",
        "boxShadow": f"0 2px 8px {AGRI_THEME['colors']['shadow']}",
        "fontFamily": AGRI_THEME["fonts"]["primary"],
        "marginBottom": "1.5rem"
    })

    # ===================================================================
    #                    PANEL DE AN√ÅLISIS HIST√ìRICO
    # ===================================================================
    historical_panel = dbc.Card(dbc.CardBody([
        html.Div(id="historical-section", style={"display":"block"}, children=[
            # Controles simplificados
            dbc.Row([
                dbc.Col([
                    dbc.Label([html.I(className="fas fa-calendar me-2"), "Per√≠odo de An√°lisis"], className="fw-bold mb-2"),
                    dcc.DatePickerRange(
                        id="historical-date-range",
                        start_date=today - datetime.timedelta(days=180),  # 6 meses por defecto
                        end_date=today, 
                        display_format="DD/MM/YYYY",
                        first_day_of_week=1, 
                        className="mb-2"
                    ),
                    html.Small("Selecciona el per√≠odo para ver c√≥mo ha evolucionado tu cultivo", 
                              className="text-muted")
                ], md=6),
                dbc.Col([
                    dbc.Label([html.I(className="fas fa-chart-line me-2"), "Frecuencia de An√°lisis"], className="fw-bold mb-2"),
                    dcc.RadioItems(
                        id="historical-frequency",
                        options=[
                            {"label":"üìÖ Mensual (recomendado)","value":"monthly"},
                            {"label":"üìä Quincenal (m√°s detalle)","value":"fortnight"}
                        ],
                        value="monthly", 
                        className="mb-2"
                    ),
                ], md=6),
            ], className="g-3 mb-4"),
            
            # Bot√≥n de acci√≥n destacado
            html.Div([
                dbc.Button([
                    html.I(className="fas fa-chart-area me-2"), 
                    "Ver Evoluci√≥n del Cultivo"
                ], id="compute-historical-btn", 
                   color="primary", 
                   size="lg",
                   className="w-100 mb-3",
                   style={"borderRadius": "12px", "fontWeight": "600"}),
                html.Div(id="historical-controls-help", className="text-center text-muted small")
            ]),

            html.Hr(),

            # Resultados simplificados
            dcc.Loading([
                html.Div(id="historical-kpi-cards", className="mb-4"),
                html.Div(id="historical-charts-container")
            ], type="default", className="mt-3"),

            html.Hr(),

            # ---- Secci√≥n de Animaci√≥n Temporal ----
            html.Div(id="animation-section", style={"display": "none"}, children=[
                html.H6([
                    html.I(className="fas fa-film me-2"), 
                    "Animaci√≥n Temporal"
                ], className="fw-bold mb-3", 
                   style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                
                dbc.Row([
                    dbc.Col([
                        dbc.Button([
                            html.I(className="fas fa-play me-2"), 
                            "Generar Animaci√≥n"
                        ], id="generate-ndvi-animation-btn", 
                           color="secondary", 
                           className="w-100 mb-3",
                           style={"borderRadius": "8px"}),
                        html.Div(id="anim-helper-text", className="small text-muted text-center")
                    ], md=4),
                    dbc.Col([
                        dbc.Button([
                            html.I(className="fas fa-play me-2"), 
                            "Reproducir"
                        ], id="anim-play-btn", 
                           color="success", 
                           outline=True,
                           className="w-100 mb-2"),
                    ], md=4),
                ], className="mb-4"),

                # Controles de animaci√≥n manual
                html.Div(id="manual-anim-container", style={"display": "block"}, children=[
                    dbc.Label("Fotograma", className="small fw-bold"),
                    dcc.Slider(
                        id="anim-slider", 
                        min=0, 
                        max=0, 
                        value=0, 
                        step=1, 
                        tooltip={"placement": "bottom"},
                        className="mb-3"
                    ),
                    html.Div(id="manual-animation-view", className="text-center mb-3"),
                    html.P(id="anim-current-label", className="text-muted small text-center"),
                ]),

                # Interval para animaci√≥n autom√°tica
                dcc.Interval(id="anim-interval", interval=400, n_intervals=0, disabled=True),

                # Resultado de animaci√≥n
                dcc.Loading(
                    html.Div(id="historical-ndvi-animation", className="mt-3"),
                    type="default"
                ),
            ])
        ])
    ]), className="shadow-sm", style={'border': 'none', 'borderRadius': '12px'})

    # ===================================================================
    #                    HEADER INFORMATIVO PRINCIPAL
    # ===================================================================
    info_header = dbc.Card([
        dbc.CardBody([
            dbc.Row([
                dbc.Col([
                    html.H4([
                        html.I(className="fas fa-satellite me-3", style={"color": AGRI_THEME["colors"]["primary"]}),
                        "An√°lisis Satelital de Cultivos"
                    ], className="mb-2", style={"color": AGRI_THEME["colors"]["text_primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
                    html.P([
                        "Monitorea la salud y evoluci√≥n de tus cultivos usando im√°genes satelitales. ",
                        "Los √≠ndices de vegetaci√≥n te ayudan a tomar decisiones informadas sobre riego, fertilizaci√≥n y tratamientos."
                    ], className="mb-0 text-muted", style={"fontFamily": AGRI_THEME["fonts"]["primary"]})
                ], md=8),
                dbc.Col([
                    dbc.Row([
                        dbc.Col([
                            html.Div([
                                html.I(className="fas fa-seedling fa-2x mb-2", style={"color": AGRI_THEME["colors"]["success"]}),
                                html.P("NDVI", className="fw-bold mb-1"),
                                html.Small("Vigor vegetativo", className="text-muted")
                            ], className="text-center")
                        ], md=4),
                        dbc.Col([
                            html.Div([
                                html.I(className="fas fa-leaf fa-2x mb-2", style={"color": AGRI_THEME["colors"]["info"]}),
                                html.P("OSAVI", className="fw-bold mb-1"),
                                html.Small("Suelo optimizado", className="text-muted")
                            ], className="text-center")
                        ], md=4),
                        dbc.Col([
                            html.Div([
                                html.I(className="fas fa-spa fa-2x mb-2", style={"color": AGRI_THEME["colors"]["warning"]}),
                                html.P("NDRE", className="fw-bold mb-1"),
                                html.Small("Estr√©s h√≠drico", className="text-muted")
                            ], className="text-center")
                        ], md=4)
                    ])
                ], md=4)
            ])
        ])
    ], style={
        "borderRadius": "12px",
        "backgroundColor": AGRI_THEME["colors"]["bg_light"],
        "border": f"1px solid {AGRI_THEME['colors']['border_light']}",
        "boxShadow": f"0 2px 8px {AGRI_THEME['colors']['shadow']}",
        "marginBottom": "1.5rem"
    })

    # ===================================================================
    #                    GU√çA R√ÅPIDA DE USO
    # ===================================================================
    steps_section = dbc.Card([
        dbc.CardBody([
            html.H5([
                html.I(className="fas fa-rocket me-2"),
                "Gu√≠a R√°pida"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            
            dbc.Row([
                dbc.Col([
                    html.Div([
                        html.H6([
                            html.Span("1‚É£", className="me-2"),
                            "Elige tu parcela"
                        ], className="fw-bold text-primary mb-1"),
                        html.Small("Selecciona una finca o dibuja en el mapa", className="text-muted")
                    ])
                ], md=3),
                dbc.Col([
                    html.Div([
                        html.H6([
                            html.Span("2‚É£", className="me-2"),
                            "Configura fechas"
                        ], className="fw-bold text-info mb-1"),
                        html.Small("Define el per√≠odo de an√°lisis", className="text-muted")
                    ])
                ], md=3),
                dbc.Col([
                    html.Div([
                        html.H6([
                            html.Span("3‚É£", className="me-2"),
                            "Ejecuta an√°lisis"
                        ], className="fw-bold text-success mb-1"),
                        html.Small("Pulsa 'An√°lisis Actual'", className="text-muted")
                    ])
                ], md=3),
                dbc.Col([
                    html.Div([
                        html.H6([
                            html.Span("4‚É£", className="me-2"),
                            "Revisa resultados"
                        ], className="fw-bold text-warning mb-1"),
                        html.Small("Mira el estado de tu cultivo", className="text-muted")
                    ])
                ], md=3)
            ])
        ])
    ], style={
        "borderRadius": "12px",
        "backgroundColor": AGRI_THEME["colors"]["bg_light"],
        "border": f"1px solid {AGRI_THEME['colors']['border_light']}",
        "marginBottom": "1.5rem"
    })

    # ===================================================================
    #                    COMPOSICI√ìN FINAL DEL LAYOUT
    # ===================================================================
    return html.Div([
        stores,
        info_header,
        steps_section,
        
        # Secci√≥n 1: Configuraci√≥n b√°sica
        html.Div([
            html.H5([
                html.I(className="fas fa-cog me-2"),
                "Configuraci√≥n del An√°lisis"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            controls_top,
            advanced_controls,
        ], className="mb-4"),
        
        # Secci√≥n 1.5: Monitor de API mejorado
        dbc.Row([
            dbc.Col([
                _create_api_quota_monitor()
            ], lg=6, md=6),
            dbc.Col([
                dbc.Card([
                    dbc.CardBody([
                        html.H6([
                            html.I(className="fas fa-rocket me-2"),
                            "Sistema Inteligente"
                        ], className="mb-2", style={"color": AGRI_THEME["colors"]["info"]}),
                        html.P([
                            html.I(className="fas fa-check me-1", style={"color": AGRI_THEME["colors"]["success"]}),
                            "Cach√© autom√°tico activado"
                        ], className="mb-1 small"),
                        html.P([
                            html.I(className="fas fa-check me-1", style={"color": AGRI_THEME["colors"]["success"]}),
                            "Resoluci√≥n optimizada"
                        ], className="mb-1 small"),
                        html.P([
                            html.I(className="fas fa-check me-1", style={"color": AGRI_THEME["colors"]["success"]}),
                            "Minimizaci√≥n de requests"
                        ], className="mb-0 small")
                    ])
                ], color="light", outline=True, style={"borderRadius": "10px"})
            ], lg=6, md=6),
        ], className="mb-4"),
        
        # Secci√≥n 2: Mapa y KPIs principales con mejor organizaci√≥n
        html.Div([
            html.H5([
                html.I(className="fas fa-map me-2"),
                "Vista Satelital y Estado del Cultivo"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["primary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            
            # Mapa a ancho completo para mejor visualizaci√≥n
            dbc.Row([
                dbc.Col(map_card, md=12, className="mb-3")
            ]),
            
            # KPIs en fila separada para mejor legibilidad
            html.Div(id="kpi-section", children=[
                html.Div([
                    html.H6([
                        html.I(className="fas fa-chart-bar me-2"), 
                        "M√©tricas de Salud del Cultivo"
                    ], className="fw-bold mb-3", style={
                        "color": AGRI_THEME["colors"]["secondary"], 
                        "fontFamily": AGRI_THEME["fonts"]["primary"]
                    }),
                    html.Div(id="kpi-cards-container", className="mb-3")
                ])
            ], style={"display":"none"}, className="mb-4")
        ]),
        
        # Secci√≥n 3: Gr√°ficos de an√°lisis mejorados
        html.Div([
            html.H5([
                html.I(className="fas fa-chart-area me-2"),
                "An√°lisis Detallado de los √çndices"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["secondary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            html.P([
                "üìä Visualizaciones avanzadas que te ayudan a interpretar el estado de tu cultivo. ",
                "Los histogramas muestran la distribuci√≥n de valores y las tendencias de cambio."
            ], className="text-muted mb-3", style={"fontFamily": AGRI_THEME["fonts"]["primary"]}),
            html.Div(id="charts-section", children=[
                dbc.Card([
                    dbc.CardBody([
                        html.Div(id="kpi-charts-container")
                    ])
                ], style={
                    "borderRadius": "12px",
                    "backgroundColor": AGRI_THEME["colors"]["bg_card"],
                    "border": f"1px solid {AGRI_THEME['colors']['border_light']}",
                    "boxShadow": f"0 2px 8px {AGRI_THEME['colors']['shadow']}"
                })
            ], style={"display":"none"})
        ], className="mb-4"),
        
        # Secci√≥n 4: Comparaci√≥n temporal simplificada
        html.Div([
            html.H5([
                html.I(className="fas fa-exchange-alt me-2"),
                "Comparar Dos Fechas"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["info"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            html.P([
                "¬øHas aplicado alg√∫n tratamiento? ¬øQuieres ver si las lluvias han ayudado? ",
                "Compara dos fechas para ver si tu cultivo ha mejorado o empeorado."
            ], className="text-muted mb-3", style={"fontFamily": AGRI_THEME["fonts"]["primary"]}),
            comparison_section
        ], className="mb-4"),
        
        # Secci√≥n informativa (opcional)
        html.Div([
            controls_refs
        ], className="mb-2"),
        
        # Secci√≥n 6: An√°lisis hist√≥rico simplificado
        html.Div([
            html.H5([
                html.I(className="fas fa-chart-line me-2"),
                "Evoluci√≥n de tu Cultivo"
            ], className="mb-3", style={"color": AGRI_THEME["colors"]["secondary"], "fontFamily": AGRI_THEME["fonts"]["primary"]}),
            html.P([
                "üìà Ve c√≥mo ha cambiado tu cultivo en los √∫ltimos meses. ",
                "Identifica las mejores √©pocas de crecimiento y detecta problemas tempranos."
            ], className="text-muted mb-3", style={"fontFamily": AGRI_THEME["fonts"]["primary"]}),
            dbc.Alert([
                html.I(className="fas fa-lightbulb me-2"),
                html.Strong("Consejo: "),
                "Usa este an√°lisis para planificar tratamientos y evaluar la eficacia de tus pr√°cticas agr√≠colas."
            ], color="info", className="mb-3"),
            historical_panel
        ]),
        
        # Modal de carga global
        dbc.Modal([
            dbc.ModalBody([
                html.Div([
                    dbc.Spinner(size="lg", color="primary"),
                    html.H5("Procesando an√°lisis satelital‚Ä¶", className="mt-3 text-center"),
                    html.P([
                        "Descargando y procesando im√°genes satelitales. ",
                        "Este proceso puede tardar varios segundos."
                    ], className="text-center text-muted")
                ], className="text-center p-3")
            ])
        ], id="satellite-loading-modal", backdrop="static", keyboard=False, centered=True, is_open=False)
        
    ], style={
        'fontFamily': AGRI_THEME['fonts']['primary'], 
        'padding': '1.5rem',
        'backgroundColor': AGRI_THEME['colors']['bg_light'],
        'minHeight': '100vh'
    })
    
# ===============================================================================
#                           FUNCIONES DE COMPATIBILIDAD
# ===============================================================================

def build_layout_datos_satelitales_mejorado():
    """
    Funci√≥n alias para mantener compatibilidad con c√≥digo legacy.
    
    Proporciona acceso a la funci√≥n principal bajo el nombre original
    utilizado en versiones anteriores del sistema. Mantiene la 
    retrocompatibilidad sin duplicar c√≥digo.
    
    Returns:
        html.Div: Layout satelital completo (id√©ntico a funci√≥n principal)
    """
    return build_scientific_satellite_layout()
