"""
===============================================================================
                    SISTEMA DE AYUDA AVANZADO PARA DASHBOARD AGR√çCOLA
===============================================================================

Sistema comprehensivo de ayuda contextual dise√±ado espec√≠ficamente para
agricultor profesional. Proporciona gu√≠as detalladas, explicaciones t√©cnicas
y consejos pr√°cticos para maximizar el uso del dashboard de monitoreo agr√≠cola.

Caracter√≠sticas principales:
‚Ä¢ Modales informativos con dise√±o profesional y user-friendly
‚Ä¢ Contenido t√©cnico adaptado para conocimiento agr√≠cola espec√≠fico
‚Ä¢ Gu√≠as paso a paso para cada funcionalidad del dashboard
‚Ä¢ Explicaciones cient√≠ficas de √≠ndices y m√©tricas agr√≠colas
‚Ä¢ Consejos de interpretaci√≥n de datos meteorol√≥gicos y satelitales
‚Ä¢ Alertas y recomendaciones para toma de decisiones
‚Ä¢ Integraci√≥n completa con todos los m√≥dulos del dashboard

M√≥dulos cubiertos:
‚Ä¢ An√°lisis Meteorol√≥gico Hist√≥rico (temperatura, humedad, precipitaci√≥n)
‚Ä¢ Pron√≥stico Meteorol√≥gico y Planificaci√≥n Agr√≠cola
‚Ä¢ An√°lisis Satelital NDVI y Salud de Cultivos
‚Ä¢ Gesti√≥n y Registro de Fincas Agr√≠colas
‚Ä¢ Sistema de Detecci√≥n de Enfermedades (Repilo)
‚Ä¢ Alertas Tempranas y Sistema de Notificaciones

Tecnolog√≠as integradas:
‚Ä¢ Datos Sentinel-2 para an√°lisis satelital
‚Ä¢ API AEMET para datos meteorol√≥gicos
‚Ä¢ Telegram Bot para reportes de campo
‚Ä¢ Machine Learning para predicciones
‚Ä¢ Sistemas GIS para georreferenciaci√≥n

Autor: German Jose Padua Pleguezuelo
Universidad: Universidad de Granada
M√°ster: Ciencia de Datos
Curso: 2024-2025

===============================================================================
"""

import dash_bootstrap_components as dbc
from dash import html, Input, Output, State


def create_help_button(modal_id: str, button_text: str = "Ayuda", button_color: str = "outline-primary", button_size: str = "sm") -> dbc.Button:
    """
    Crea un bot√≥n de ayuda profesional y elegante que abrir√° un modal informativo.
    
    Este bot√≥n est√° dise√±ado para integrarse seamlessly con el dise√±o del dashboard,
    proporcionando acceso r√°pido a informaci√≥n contextual sin interrumpir el flujo
    de trabajo del agricultor.
    
    Args:
        modal_id: ID √∫nico para el modal (debe coincidir exactamente con el modal target)
        button_text: Texto del bot√≥n (por defecto "Ayuda" - m√°s claro que "?")
        button_color: Color del bot√≥n Bootstrap (outline-primary por defecto)
        button_size: Tama√±o del bot√≥n (sm por defecto para no ser intrusivo)
    
    Returns:
        dbc.Button: Componente Button de Dash Bootstrap estilizado
        
    Features:
        ‚Ä¢ Icono intuitivo de ayuda
        ‚Ä¢ Hover effects suaves
        ‚Ä¢ Integraci√≥n con tema del dashboard
        ‚Ä¢ Accesibilidad mejorada
        ‚Ä¢ Responsive design
    """
    return dbc.Button([
        html.I(className="fas fa-question-circle me-2", style={'fontSize': '0.9rem'}),
        button_text
    ], 
        id=f"open-{modal_id}",
        color=button_color, 
        size=button_size,
        className="help-btn ms-2",
        style={
            'borderRadius': '25px',
            'fontWeight': '500',
            'transition': 'all 0.3s ease',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.1)'
        },
        title="Obtener ayuda sobre esta secci√≥n"
    )


def create_info_modal(modal_id: str, title: str, content_sections: list, size: str = "xl") -> dbc.Modal:
    """
    Crea un modal informativo profesional con m√∫ltiples secciones organizadas.
    
    Dise√±ado para proporcionar informaci√≥n t√©cnica y pr√°ctica de manera estructurada
    y visualmente atractiva. Incluye iconograf√≠a profesional, navegaci√≥n clara y
    contenido adaptado para usuarios agr√≠colas con diferentes niveles t√©cnicos.
    
    Args:
        modal_id: ID √∫nico para el modal (usado para callbacks)
        title: T√≠tulo descriptivo del modal
        content_sections: Lista de secciones con estructura:
                         [{'title': str, 'content': html.Div, 'icon': str}]
        size: Tama√±o del modal ('xl' por defecto para mejor legibilidad)
    
    Returns:
        dbc.Modal: Componente Modal de Dash Bootstrap completamente estilizado
        
    Features:
        ‚Ä¢ Design responsivo y profesional
        ‚Ä¢ Iconograf√≠a consistente
        ‚Ä¢ Navegaci√≥n intuitiva
        ‚Ä¢ Contenido estructurado
        ‚Ä¢ Z-index optimizado
        ‚Ä¢ Animaciones suaves
    """
    
    modal_body_content = []
    
    # Crear contenido organizado por secciones
    for i, section in enumerate(content_sections):
        # Separador visual entre secciones (excepto la primera)
        if i > 0:
            modal_body_content.append(html.Hr(style={'margin': '2rem 0', 'opacity': '0.3'}))
            
        # Header de la secci√≥n con icono y estilo mejorado
        section_header = html.H5([
            html.I(className=f"fas {section.get('icon', 'fa-info-circle')} me-2", 
                   style={'color': '#2E7D32', 'fontSize': '1.2rem'}),
            section['title']
        ], className="mb-3 section-header", 
           style={
               'color': '#2E7D32',
               'fontWeight': '600',
               'borderBottom': '2px solid #E8F5E9',
               'paddingBottom': '0.5rem',
               'marginTop': '1.5rem' if i > 0 else '0'
           })
        
        # Contenido de la secci√≥n con padding mejorado
        section_content = html.Div(
            section['content'], 
            className="section-content",
            style={
                'padding': '1rem 0',
                'lineHeight': '1.6',
                'fontSize': '0.95rem'
            }
        )
        
        modal_body_content.extend([section_header, section_content])
    
    return dbc.Modal([
        # Header mejorado con dise√±o profesional
        dbc.ModalHeader([
            dbc.ModalTitle([
                html.I(className="fas fa-seedling me-2", 
                       style={'color': '#4CAF50', 'fontSize': '1.4rem'}),
                title
            ], style={
                'color': '#2E7D32',
                'fontWeight': '700',
                'fontSize': '1.3rem'
            }),
            # Bot√≥n de cerrar personalizado
            dbc.Button([
                html.I(className="fas fa-times")
            ], 
                id=f"close-{modal_id}",
                color="light",
                size="sm",
                className="btn-close-custom",
                style={
                    'borderRadius': '50%',
                    'width': '35px',
                    'height': '35px',
                    'padding': '0'
                },
                title="Cerrar ayuda"
            )
        ], style={
            'backgroundColor': '#F8FFF8',
            'borderBottom': '2px solid #E8F5E9'
        }),
        
        # Body con scroll optimizado
        dbc.ModalBody(
            modal_body_content,
            style={
                'maxHeight': '70vh',
                'overflowY': 'auto',
                'padding': '1.5rem',
                'backgroundColor': '#FFFFFF'
            }
        ),
        
        # Footer con acciones adicionales
        dbc.ModalFooter([
            html.Small(
                "üí° Tip: Use estas gu√≠as como referencia mientras trabaja con el dashboard",
                className="text-muted me-auto",
                style={'fontStyle': 'italic'}
            ),
            dbc.Button([
                html.I(className="fas fa-check me-2"),
                "Entendido"
            ], 
                id=f"close-{modal_id}-alt",
                color="success",
                size="sm",
                style={
                    'borderRadius': '20px',
                    'fontWeight': '500'
                }
            )
        ], style={
            'backgroundColor': '#F8FFF8',
            'borderTop': '1px solid #E8F5E9'
        })
    ],
        id=modal_id,
        size=size,
        is_open=False,
        zindex=3000,
        backdrop_style={"zIndex": 2999},
        className="help-modal",
        style={
            'fontFamily': "'Inter', sans-serif"
        }
    )


# ===============================================================================
#                         CONTENIDOS ESPECIALIZADOS POR M√ìDULO
# ===============================================================================

MODAL_CONTENTS = {
    # ============================================================================
    #                              M√ìDULO GENERAL
    # ============================================================================
    'general': {
        'title': '‚öôÔ∏è Configuraci√≥n de An√°lisis Meteorol√≥gico',
        'sections': [
            {
                'title': 'Controles de Visualizaci√≥n',
                'icon': 'fa-sliders-h',
                'content': html.Div([
                    html.P([
                        "Los controles de per√≠odo le permiten personalizar el rango temporal ",
                        "de an√°lisis para obtener insights espec√≠ficos de su cultivo:"
                    ]),
                    html.Ul([
                        html.Li([html.Strong("Per√≠odo:"), " Seleccione entre 1 semana, 1 mes, 3 meses o todo el hist√≥rico disponible"]),
                        html.Li([html.Strong("Agrupaci√≥n:"), " Visualice datos por d√≠a, semana o mes seg√∫n sus necesidades"]),
                        html.Li([html.Strong("Variables:"), " Active/desactive temperatura, humedad, precipitaci√≥n y viento"])
                    ]),
                    dbc.Alert([
                        html.I(className="fas fa-lightbulb me-2"),
                        html.Strong("Consejo profesional: "),
                        "Para detectar patrones estacionales, use per√≠odos de 3 meses o m√°s con agrupaci√≥n semanal."
                    ], color="info", className="mt-3")
                ])
            }
        ]
    },
    # ============================================================================
    #                         M√ìDULO METEOROL√ìGICO
    # ============================================================================
    'weather': {
        'title': 'üå§Ô∏è Panel Meteorol√≥gico en Tiempo Real',
        'sections': [
            {
                'title': 'Interpretaci√≥n de Datos Actuales',
                'icon': 'fa-cloud-sun',
                'content': html.Div([
                    html.P([
                        "El panel meteorol√≥gico muestra las condiciones m√°s recientes de su estaci√≥n:",
                    ]),
                    dbc.Row([
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6([html.I(className="fas fa-thermometer-half me-2"), "Temperatura"], className="text-primary"),
                                    html.P("Valor instant√°neo en ¬∞C, cr√≠tico para el desarrollo de enfermedades f√∫ngicas", className="small")
                                ])
                            ])
                        ], md=6),
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6([html.I(className="fas fa-tint me-2"), "Humedad Relativa"], className="text-info"),
                                    html.P("Porcentaje de humedad del aire, factor clave en infecciones", className="small")
                                ])
                            ])
                        ], md=6)
                    ], className="mb-3"),
                    dbc.Row([
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6([html.I(className="fas fa-cloud-rain me-2"), "Precipitaci√≥n"], className="text-success"),
                                    html.P("Cantidad de lluvia reciente, favorece dispersi√≥n de esporas", className="small")
                                ])
                            ])
                        ], md=6),
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6([html.I(className="fas fa-wind me-2"), "Viento"], className="text-warning"),
                                    html.P("Velocidad y direcci√≥n, ayuda en dispersi√≥n a√©rea de pat√≥genos", className="small")
                                ])
                            ])
                        ], md=6)
                    ])
                ])
            }
        ]
    },
    'temperatura': {
        'title': 'üå°Ô∏è Temperatura y su Impacto en el Olivar',
        'sections': [
            {
                'title': 'Explicaci√≥n del Gr√°fico',
                'icon': 'fa-chart-area',
                'content': html.Div([
                    html.P([
                        "En este gr√°fico se representan tres curvas de temperatura: ",
                        html.Span("m√≠nima (azul)", style={'color':'#1f77b4','fontWeight':'bold'}),
                        ", ",
                        html.Span("media (rojo)", style={'color':'#d62728','fontWeight':'bold'}),
                        " y ",
                        html.Span("m√°xima (rojo punteado)", style={'color':'#d62728','fontStyle':'italic'}),
                        ". El √°rea sombreada muestra el rango diario [m√≠nima ‚Äì m√°xima]."
                    ], className="mb-2"),
                ], className="text-justify")
            },
            {
                'title': 'Rangos Cr√≠ticos de Temperatura',
                'icon': 'fa-thermometer-half',
                'content': html.Div([
                    dbc.Alert([
                        html.H6("‚ùó M√°ximo Riesgo: 8 ‚Äì 24 ¬∞C", className="alert-heading"),
                        html.P("√ìptimo cerca de 15 ¬∞C, condiciones ideales para el desarrollo del repilo"),
                    ], color="danger"),
                    dbc.Alert([
                        html.H6("‚ö†Ô∏è Riesgo Moderado: 5 ‚Äì 8 ¬∞C y 24 ‚Äì 30 ¬∞C", className="alert-heading"),
                        html.P("Desarrollo m√°s lento, pero a√∫n activo")
                    ], color="warning"),
                    dbc.Alert([
                        html.H6("‚úÖ Bajo Riesgo: < 5 ¬∞C o > 30 ¬∞C", className="alert-heading"),
                        html.P("Condiciones adversas que detienen el hongo")
                    ], color="success")
                ], className="mb-0")
            }
        ]
    },
    
    'precipitacion': {
        'title': 'üåßÔ∏è Precipitaci√≥n y Humedad',
        'sections': [
            {
                'title': 'Explicaci√≥n del Gr√°fico',
                'icon': 'fa-chart-bar',
                'content': html.Div([
                    html.P(
                        [
                            "Este gr√°fico muestra dos variables clave para el repilo: ",
                            html.B("precipitaci√≥n (mm)"),
                            " en el eje izquierdo y ",
                            html.B("humedad relativa (%)"),
                            " promedio en el eje derecho. ",
                            "Los picos simult√°neos de lluvia y humedad prolongada ",
                            "se asocian con un riesgo elevado de infecci√≥n."
                        ],
                        className="mb-3"
                    ),
                    html.P(
                        [
                            "El rango √≥ptimo de temperatura para el desarrollo de la enfermedad es ",
                            html.Span("15 ¬∞C", className="fw-bold"),
                            " (puede variar entre ",
                            html.Span("8 ‚Äì 24 ¬∞C", className="fst-italic"),
                            "). Bajo estas condiciones, la humedad foliar y la lluvia crean el microclima ideal."
                        ]
                    )
                ], className="text-justify")
            },
            {
                'title': 'La Lluvia y el Repilo',
                'icon': 'fa-cloud-rain',
                'content': html.Div([
                    html.P(
                        "Para que las esporas germinen y penetren la hoja se necesita:",
                        className="mb-3"
                    ),
                    dbc.Row([
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6("üíß Humedad Cr√≠tica", className="card-title text-primary"),
                                    html.Ul([
                                        html.Li("Humedad foliar ‚â• 98 % continua durante ‚â• 12 h"),
                                        html.Li("Temperatura del aire entre 15 ¬∞C y 20 ¬∞C")
                                    ], className="mb-0")
                                ])
                            ])
                        ], width=6),
                        dbc.Col([
                            dbc.Card([
                                dbc.CardBody([
                                    html.H6("üåßÔ∏è Dispersi√≥n por Lluvia", className="card-title text-info"),
                                    html.Ul([
                                        html.Li("Lluvias ligeras ‚â• 1 mm generan salpicaduras"),
                                        html.Li("Escorrent√≠as mueven las conidias entre hojas")
                                    ], className="mb-0")
                                ])
                            ])
                        ], width=6)
                    ])
                ], className="text-justify")
            }
        ]
    },
    'prediccion': {
        'title': 'üîÆ Pron√≥stico Meteorol√≥gico',
        'sections': [
            {
                'title': '¬øQu√© ofrece este m√≥dulo?',
                'icon': 'fa-info-circle',
                'content': html.P(
                    'Permite explorar las predicciones meteorol√≥gicas y el riesgo de repilo para planificar las labores agr√≠colas.'
                ),
            }
        ],
    },

    'municipio': {
        'title': 'üèôÔ∏è Selecci√≥n de Municipio',
        'sections': [
            {
                'title': 'C√≥mo utilizarlo',
                'icon': 'fa-map-marker-alt',
                'content': html.P(
                    'Elija el municipio para obtener pron√≥sticos espec√≠ficos de esa ubicaci√≥n. Puede escribir para filtrar la lista.'
                ),
            }
        ],
    },

    'pred_semanal': {
        'title': 'üìÖ Predicci√≥n Semanal',
        'sections': [
            {
                'title': 'Interpretaci√≥n de las tarjetas',
                'icon': 'fa-chart-bar',
                'content': html.P(
                    'Cada tarjeta resume la previsi√≥n diaria con temperaturas, probabilidad de lluvia y nivel de riesgo de repilo.'
                ),
            }
        ],
    },

    'pred_horaria': {
        'title': '‚è∞ Evoluci√≥n 48 Horas',
        'sections': [
            {
                'title': 'Lectura del gr√°fico',
                'icon': 'fa-chart-line',
                'content': html.P(
                    'Muestra la evoluci√≥n prevista de temperatura, humedad y precipitaci√≥n para las pr√≥ximas 48 horas.'
                ),
            }
        ],
    },
    
    'ndvi': {
        'title': 'üõ∞Ô∏è An√°lisis Geoespacial',
        'sections': [
            {
                'title': 'Tecnolog√≠a Satelital',
                'icon': 'fa-satellite',
                'content': html.Ul([
                    html.Li("Sat√©lites: Sentinel-2 (Programa Copernicus ESA)"),
                    html.Li("Resoluci√≥n espacial: 10 m por p√≠xel"),
                    html.Li("Frecuencia: Cada 5 d√≠as (condiciones atmosf√©ricas)"),
                    html.Li("Bandas utilizadas: Rojo (B04) e Infrarrojo cercano (B08)"),
                ], className="mb-3")
            },
            {
                'title': '¬øQu√© es el NDVI?',
                'icon': 'fa-leaf',
                'content': html.Div([
                    html.P([
                        "El NDVI (√çndice de Vegetaci√≥n de Diferencia Normalizada) es un indicador de la salud de los cultivos. ",
                        "Se calcula comparando la reflexi√≥n del infrarrojo cercano (que generan las hojas verdes sanas) con la ",
                        "absorci√≥n de la luz roja por la clorofila. Valores altos indican vegetaci√≥n densa y en buen estado, ",
                        "mientras que los valores bajos indican estr√©s, suelo desnudo o vegetaci√≥n enferma."
                        
                    ], className="mb-3")
                ])
            },
            {
                'title': 'C√≥mo Interpretar los Colores',
                'icon': 'fa-palette',
                'content': html.Div([
                    html.Table([
                        html.Thead(html.Tr([
                            html.Th("Color en el Mapa", style={'width': '100px'}),
                            html.Th("Valores NDVI"),
                            html.Th("¬øQu√© Significa para tu Olivar?")
                        ])),
                        html.Tbody([
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#004400', 'height': '30px'}),
                                html.Td("0.6 - 1.0"),
                                html.Td("üåø Vegetaci√≥n muy sana")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#0f540a', 'height': '30px'}),
                                html.Td("0.5 - 0.6"),
                                html.Td("‚úÖ Buena salud")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#306d1c', 'height': '30px'}),
                                html.Td("0.4 - 0.5"),
                                html.Td("‚ö†Ô∏è Salud moderada")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#70a33f', 'height': '30px'}),
                                html.Td("0.2 - 0.4"),
                                html.Td("üö® Vegetaci√≥n en riesgo")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#ccc682', 'height': '30px'}),
                                html.Td("0 - 0.2"),
                                html.Td("‚ö° Vegetaci√≥n muy d√©bil o suelo desnudo")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#eaeaea', 'height': '30px'}),
                                html.Td("-0.5 - 0"),
                                html.Td("‚ùå Sin vegetaci√≥n o agua")
                            ]),
                            html.Tr([
                                html.Td("", style={'backgroundColor':'#0c0c0c', 'height': '30px'}),
                                html.Td("Menos de -0.5"),
                                html.Td("‚ùå Agua o nieve")
                            ])
                            
                        ])
                    ], className="table table-sm")
                ])
            }
        ]
    },
    'satelital': {
        'title': 'üõ∞Ô∏è M√≥dulo de Datos Satelitales',
        'sections': [
            {
                'title': '¬øPara qu√© sirve?',
                'icon': 'fa-info-circle',
                'content': html.P(
                    'Permite monitorear la salud de los cultivos mediante √≠ndices de vegetaci√≥n obtenidos de im√°genes Sentinel-2.'
                ),
            },
            {
                'title': 'Fuentes de datos',
                'icon': 'fa-satellite',
                'content': html.Ul([
                    html.Li('Sat√©lites Sentinel-2 (programa Copernicus)'),
                    html.Li('Resoluci√≥n espacial de 10 m por p√≠xel'),
                    html.Li('Actualizaciones aproximadas cada 5 d√≠as')
                ])
            }
        ],
    },
    'config_satelital': {
        'title': '‚öôÔ∏è Configuraci√≥n del An√°lisis',
        'sections': [
            {
                'title': 'Selecci√≥n de √°rea',
                'icon': 'fa-draw-polygon',
                'content': html.P(
                    'Escoge una finca registrada o dibuja un pol√≠gono en el mapa para delimitar la zona de estudio.'
                ),
            },
            {
                'title': 'Par√°metros de c√°lculo',
                'icon': 'fa-sliders-h',
                'content': html.P(
                    'Define fechas, √≠ndice de vegetaci√≥n y paleta de colores antes de ejecutar el an√°lisis.'
                ),
            }
        ],
    },
    'mapa_satelital': {
        'title': 'üó∫Ô∏è Vista Satelital',
        'sections': [
            {
                'title': 'Interacci√≥n con el mapa',
                'icon': 'fa-map',
                'content': html.P(
                    'Navega con el rat√≥n, activa capas y ajusta la opacidad de los √≠ndices para explorar tu cultivo.'
                ),
            },
            {
                'title': 'Dibujo y selecci√≥n',
                'icon': 'fa-pencil-alt',
                'content': html.P(
                    'Utiliza las herramientas de dibujo para crear o modificar √°reas de an√°lisis directamente sobre el mapa.'
                ),
            }
        ],
    },
    'analisis_indices': {
        'title': 'üìä An√°lisis de √çndices',
        'sections': [
            {
                'title': 'Lectura de gr√°ficos',
                'icon': 'fa-chart-area',
                'content': html.P(
                    'Los histogramas y curvas muestran la distribuci√≥n y evoluci√≥n de los valores de cada √≠ndice seleccionado.'
                ),
            }
        ],
    },
    'comparacion_satelital': {
        'title': 'üîÑ Comparaci√≥n de Fechas',
        'sections': [
            {
                'title': 'C√≥mo funciona',
                'icon': 'fa-exchange-alt',
                'content': html.P(
                    'Selecciona dos rangos temporales e √≠ndices para evaluar mejoras o deterioros en la vegetaci√≥n.'
                ),
            }
        ],
    },
    'historico_satelital': {
        'title': 'üìà Evoluci√≥n Hist√≥rica',
        'sections': [
            {
                'title': 'Objetivo',
                'icon': 'fa-chart-line',
                'content': html.P(
                    'Revisa c√≥mo ha cambiado tu cultivo a lo largo del tiempo para detectar tendencias o anomal√≠as.'
                ),
            }
        ],
    },
    'detecciones': {
        'title': 'üß™ Detecciones de Repilo',
        'sections': [
            {
                'title': '¬øQu√© muestra esta secci√≥n?',
                'icon': 'fa-microscope',
                'content': html.P(
                    'Visualiza las incidencias reportadas por los agricultores a trav√©s del bot de Telegram, '
                    'permitiendo un monitoreo georreferenciado de la enfermedad.'
                ),
            }
        ],
    },
    'filtros-detecciones': {
        'title': 'üîç Controles de Visualizaci√≥n',
        'sections': [
            {
                'title': 'Filtrado y actualizaci√≥n',
                'icon': 'fa-filter',
                'content': html.P(
                    'Ajusta el periodo temporal y las severidades para refinar las detecciones mostradas '
                    'en los gr√°ficos y el mapa.'
                ),
            }
        ],
    },
    'metricas-detecciones': {
        'title': 'üìä M√©tricas de Detecci√≥n',
        'sections': [
            {
                'title': 'Interpretaci√≥n de tarjetas',
                'icon': 'fa-chart-bar',
                'content': html.P(
                    'Cada tarjeta resume estad√≠sticas claves como totales hist√≥ricos, severidad media y tendencias recientes.'
                ),
            }
        ],
    },
    'mapa-detecciones': {
        'title': 'üó∫Ô∏è Mapa de Detecciones',
        'sections': [
            {
                'title': 'Capas por severidad',
                'icon': 'fa-map-marked-alt',
                'content': html.P(
                    'Explora la ubicaci√≥n exacta de cada reporte y activa capas para visualizar las diferentes severidades.'
                ),
            }
        ],
    },
    'timeline-detecciones': {
        'title': '‚è≥ Evoluci√≥n Temporal',
        'sections': [
            {
                'title': 'Comprender el gr√°fico',
                'icon': 'fa-chart-line',
                'content': html.P(
                    'Muestra c√≥mo han variado las detecciones en el tiempo para identificar picos y tendencias.'
                ),
            }
        ],
    },
    'distribucion-detecciones': {
        'title': 'üßÆ Distribuci√≥n de Severidad',
        'sections': [
            {
                'title': 'Lectura del gr√°fico',
                'icon': 'fa-chart-pie',
                'content': html.P(
                    'El gr√°fico circular indica la proporci√≥n de reportes en cada nivel de severidad.'
                ),
            }
        ],
    },
    'alertas-detecciones': {
        'title': 'üö® Estado de Alertas',
        'sections': [
            {
                'title': 'Indicadores de riesgo',
                'icon': 'fa-exclamation-triangle',
                'content': html.P(
                    'Resume el nivel de atenci√≥n requerido seg√∫n las detecciones recientes y su gravedad.'
                ),
            }
        ],
    },

    'nueva-finca': {
        'title': 'üìù Registro de Nuevas Fincas',
        'sections': [
            {
                'title': 'C√≥mo completar el formulario',
                'icon': 'fa-edit',
                'content': html.P(
                    'Asigne un nombre descriptivo a la finca. La superficie se calcula autom√°ticamente tras dibujar el pol√≠gono.'
                ),
            },
            {
                'title': 'Guardar o limpiar',
                'icon': 'fa-save',
                'content': html.P(
                    'Use "Guardar Finca" para almacenarla o "Limpiar Formulario" para reiniciar el proceso.'
                ),
            },
        ],
    },

    'mapa-fincas': {
        'title': 'üó∫Ô∏è Delimitaci√≥n en el Mapa',
        'sections': [
            {
                'title': 'Herramientas de dibujo',
                'icon': 'fa-draw-polygon',
                'content': html.P(
                    'Utilice la barra del mapa para dibujar pol√≠gonos o rect√°ngulos y cierre la forma con doble clic.'
                ),
            },
            {
                'title': 'Opciones de visualizaci√≥n',
                'icon': 'fa-layer-group',
                'content': html.P(
                    'Cambie entre vista de calles y sat√©lite con los botones superiores.'
                ),
            },
        ],
    },

    'estadisticas': {
        'title': 'üìä M√©tricas de Fincas',
        'sections': [
            {
                'title': 'Interpretaci√≥n',
                'icon': 'fa-chart-bar',
                'content': html.P(
                    'Las tarjetas muestran el n√∫mero total de parcelas y su superficie acumulada. Se actualizan autom√°ticamente.'
                ),
            }
        ],
    },

    'gestion-fincas': {
        'title': 'üìã Gesti√≥n de Fincas Registradas',
        'sections': [
            {
                'title': 'Acciones disponibles',
                'icon': 'fa-tasks',
                'content': html.P(
                    'Selecciona una finca para centrarla en el mapa, editar su nombre o eliminarla definitivamente.'
                ),
            },
            {
                'title': 'Uso posterior',
                'icon': 'fa-satellite',
                'content': html.P(
                    'Las fincas guardadas podr√°n utilizarse en el m√≥dulo de Datos Satelitales.'
                ),
            },
        ],
    },
    'alertas': {
        'title': 'üö® Sistema de Alertas para el Agricultor',
        'sections': [
            {
                'title': 'Niveles de Alerta Explicados',
                'icon': 'fa-traffic-light',
                'content': html.Div([
                    dbc.Row([
                        dbc.Col([
                            dbc.Card([
                                dbc.CardHeader([
                                    dbc.Badge("CR√çTICA", color="danger", className="me-2"),
                                    "¬°Act√∫a Ya!"
                                ]),
                                dbc.CardBody([
                                    html.P("Condiciones perfectas para repilo detectadas"),
                                    html.Strong("Qu√© hacer: "),
                                    html.Ul([
                                        html.Li("Aplicar tratamiento en 24-48h"),
                                        html.Li("Inspeccionar campo diariamente"),
                                        html.Li("Preparar segunda aplicaci√≥n si persiste")
                                    ])
                                ])
                            ], className="border-danger")
                        ], width=6),
                        dbc.Col([
                            dbc.Card([
                                dbc.CardHeader([
                                    dbc.Badge("ALTA", color="warning", className="me-2"),
                                    "Precauci√≥n"
                                ]),
                                dbc.CardBody([
                                    html.P("Riesgo elevado en desarrollo"),
                                    html.Strong("Qu√© hacer: "),
                                    html.Ul([
                                        html.Li("Monitorear evoluci√≥n del tiempo"),
                                        html.Li("Preparar equipo de aplicaci√≥n"),
                                        html.Li("Revisar zonas m√°s sensibles")
                                    ])
                                ])
                            ], className="border-warning")
                        ], width=6)
                    ], className="mb-3"),
                    dbc.Row([
                        dbc.Col([
                            dbc.Card([
                                dbc.CardHeader([
                                    dbc.Badge("MEDIA", color="info", className="me-2"),
                                    "Atenci√≥n"
                                ]),
                                dbc.CardBody([
                                    html.P("Condiciones parcialmente favorables"),
                                    html.Strong("Qu√© hacer: "),
                                    html.Ul([
                                        html.Li("Mantener vigilancia rutinaria"),
                                        html.Li("Revisar pron√≥stico extendido"),
                                        html.Li("Documentar observaciones")
                                    ])
                                ])
                            ], className="border-info")
                        ], width=6),
                        dbc.Col([
                            dbc.Card([
                                dbc.CardHeader([
                                    dbc.Badge("BAJA", color="success", className="me-2"),
                                    "Tranquilo"
                                ]),
                                dbc.CardBody([
                                    html.P("Condiciones normales"),
                                    html.Strong("Qu√© hacer: "),
                                    html.Ul([
                                        html.Li("Mantenimiento rutinario"),
                                        html.Li("Planificar pr√≥ximas labores"),
                                        html.Li("Revisar estado general")
                                    ])
                                ])
                            ], className="border-success")
                        ], width=6)
                    ])
                ])
            }
        ]
    }
}


def create_chart_help_section(chart_type: str, title: str = None) -> html.Div:
    """
    Crea una secci√≥n completa con t√≠tulo, bot√≥n de ayuda y modal para un gr√°fico
    
    Args:
        chart_type: Tipo de gr√°fico ('temperatura', 'precipitacion', 'ndvi', 'alertas')
        title: T√≠tulo personalizado (opcional)
    
    Returns:
        Div con t√≠tulo, bot√≥n y modal
    """
    modal_id = f"modal-{chart_type}"
    display_title = title or chart_type.replace('_', ' ').title()
    
    modal_config = MODAL_CONTENTS.get(chart_type, {
        'title': f'Informaci√≥n sobre {display_title}',
        'sections': [{'title': 'Sin informaci√≥n', 'content': 'Datos no disponibles'}]
    })
    
    return html.Div([
        html.Div([
            html.H6(display_title, className="mb-0"),
            create_help_button(modal_id, "Ayuda", "outline-primary")
        ], className="d-flex align-items-center justify-content-between mb-2"),
        
        create_info_modal(
            modal_id=modal_id,
            title=modal_config['title'],
            content_sections=modal_config['sections']
        )
    ])


def register_modal_callbacks(app):
    """
    Registra todos los callbacks para abrir/cerrar modales
    """
    
    # Callback para modal NDVI
    @app.callback(
        Output("modal-ndvi", "is_open"),
        [Input("open-modal-ndvi", "n_clicks"), Input("close-modal-ndvi", "n_clicks")],
        [State("modal-ndvi", "is_open")]
    )
    def toggle_modal_ndvi(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal general
    @app.callback(
        Output("modal-general", "is_open"),
        [Input("open-modal-general", "n_clicks"), Input("close-modal-general", "n_clicks")],
        [State("modal-general", "is_open")]
    )
    def toggle_modal_general(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal temperatura
    @app.callback(
        Output("modal-temperatura", "is_open"),
        [Input("open-modal-temperatura", "n_clicks"), Input("close-modal-temperatura", "n_clicks")],
        [State("modal-temperatura", "is_open")]
    )
    def toggle_modal_temperatura(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal precipitacion
    @app.callback(
        Output("modal-precipitacion", "is_open"),
        [Input("open-modal-precipitacion", "n_clicks"), Input("close-modal-precipitacion", "n_clicks")],
        [State("modal-precipitacion", "is_open")]
    )
    def toggle_modal_precipitacion(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal alertas
    @app.callback(
        Output("modal-alertas", "is_open"),
        [Input("open-modal-alertas", "n_clicks"), Input("close-modal-alertas", "n_clicks")],
        [State("modal-alertas", "is_open")]
    )
    def toggle_modal_alertas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal weather
    @app.callback(
        Output("modal-weather", "is_open"),
        [Input("open-modal-weather", "n_clicks"), Input("close-modal-weather", "n_clicks")],
        [State("modal-weather", "is_open")]
    )
    def toggle_modal_weather(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal prediccion
    @app.callback(
        Output("modal-prediccion", "is_open"),
        [Input("open-modal-prediccion", "n_clicks"), Input("close-modal-prediccion", "n_clicks")],
        [State("modal-prediccion", "is_open")]
    )
    def toggle_modal_prediccion(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal pred-semanal
    @app.callback(
        Output("modal-pred-semanal", "is_open"),
        [Input("open-modal-pred-semanal", "n_clicks"), Input("close-modal-pred-semanal", "n_clicks")],
        [State("modal-pred-semanal", "is_open")]
    )
    def toggle_modal_pred_semanal(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal pred-horaria
    @app.callback(
        Output("modal-pred-horaria", "is_open"),
        [Input("open-modal-pred-horaria", "n_clicks"), Input("close-modal-pred-horaria", "n_clicks")],
        [State("modal-pred-horaria", "is_open")]
    )
    def toggle_modal_pred_horaria(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal satelital
    @app.callback(
        Output("modal-satelital", "is_open"),
        [Input("open-modal-satelital", "n_clicks"), Input("close-modal-satelital", "n_clicks")],
        [State("modal-satelital", "is_open")]
    )
    def toggle_modal_satelital(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal temporal
    @app.callback(
        Output("modal-temporal", "is_open"),
        [Input("open-modal-temporal", "n_clicks"), Input("close-modal-temporal", "n_clicks")],
        [State("modal-temporal", "is_open")]
    )
    def toggle_modal_temporal(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal mapa-inter
    @app.callback(
        Output("modal-mapa-inter", "is_open"),
        [Input("open-modal-mapa-inter", "n_clicks"), Input("close-modal-mapa-inter", "n_clicks")],
        [State("modal-mapa-inter", "is_open")]
    )
    def toggle_modal_mapa_inter(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal estadisticas
    @app.callback(
        Output("modal-estadisticas", "is_open"),
        [Input("open-modal-estadisticas", "n_clicks"), Input("close-modal-estadisticas", "n_clicks")],
        [State("modal-estadisticas", "is_open")]
    )
    def toggle_modal_estadisticas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal nueva-finca
    @app.callback(
        Output("modal-nueva-finca", "is_open"),
        [Input("open-modal-nueva-finca", "n_clicks"), Input("close-modal-nueva-finca", "n_clicks")],
        [State("modal-nueva-finca", "is_open")]
    )
    def toggle_modal_nueva_finca(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal mapa-fincas
    @app.callback(
        Output("modal-mapa-fincas", "is_open"),
        [Input("open-modal-mapa-fincas", "n_clicks"), Input("close-modal-mapa-fincas", "n_clicks")],
        [State("modal-mapa-fincas", "is_open")]
    )
    def toggle_modal_mapa_fincas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal gestion-fincas
    @app.callback(
        Output("modal-gestion-fincas", "is_open"),
        [Input("open-modal-gestion-fincas", "n_clicks"), Input("close-modal-gestion-fincas", "n_clicks")],
        [State("modal-gestion-fincas", "is_open")]
    )
    def toggle_modal_gestion_fincas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    

    # Callback para modal configuraci√≥n satelital
    @app.callback(
        Output("modal-config-satelital", "is_open"),
        [Input("open-modal-config-satelital", "n_clicks"), Input("close-modal-config-satelital", "n_clicks")],
        [State("modal-config-satelital", "is_open")]
    )
    def toggle_modal_config_satelital(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal mapa satelital
    @app.callback(
        Output("modal-mapa-satelital", "is_open"),
        [Input("open-modal-mapa-satelital", "n_clicks"), Input("close-modal-mapa-satelital", "n_clicks")],
        [State("modal-mapa-satelital", "is_open")]
    )
    def toggle_modal_mapa_satelital(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal an√°lisis de √≠ndices
    @app.callback(
        Output("modal-analisis-indices", "is_open"),
        [Input("open-modal-analisis-indices", "n_clicks"), Input("close-modal-analisis-indices", "n_clicks")],
        [State("modal-analisis-indices", "is_open")]
    )
    def toggle_modal_analisis_indices(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal comparaci√≥n satelital
    @app.callback(
        Output("modal-comparacion-satelital", "is_open"),
        [Input("open-modal-comparacion-satelital", "n_clicks"), Input("close-modal-comparacion-satelital", "n_clicks")],
        [State("modal-comparacion-satelital", "is_open")]
    )
    def toggle_modal_comparacion_satelital(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal hist√≥rico satelital
    @app.callback(
        Output("modal-historico-satelital", "is_open"),
        [Input("open-modal-historico-satelital", "n_clicks"), Input("close-modal-historico-satelital", "n_clicks")],
        [State("modal-historico-satelital", "is_open")]
    )
    def toggle_modal_historico_satelital(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open
    
    # Callback para modal detecciones (general)
    @app.callback(
        Output("modal-detecciones", "is_open"),
        [Input("open-modal-detecciones", "n_clicks"), Input("close-modal-detecciones", "n_clicks")],
        [State("modal-detecciones", "is_open")]
    )
    def toggle_modal_detecciones(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal filtros de detecciones
    @app.callback(
        Output("modal-detecciones-filtros", "is_open"),
        [Input("open-modal-detecciones-filtros", "n_clicks"), Input("close-modal-detecciones-filtros", "n_clicks")],
        [State("modal-detecciones-filtros", "is_open")]
    )
    def toggle_modal_detecciones_filtros(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal m√©tricas de detecciones
    @app.callback(
        Output("modal-detecciones-metricas", "is_open"),
        [Input("open-modal-detecciones-metricas", "n_clicks"), Input("close-modal-detecciones-metricas", "n_clicks")],
        [State("modal-detecciones-metricas", "is_open")]
    )
    def toggle_modal_detecciones_metricas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal mapa de detecciones
    @app.callback(
        Output("modal-detecciones-mapa", "is_open"),
        [Input("open-modal-detecciones-mapa", "n_clicks"), Input("close-modal-detecciones-mapa", "n_clicks")],
        [State("modal-detecciones-mapa", "is_open")]
    )
    def toggle_modal_detecciones_mapa(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal timeline de detecciones
    @app.callback(
        Output("modal-detecciones-timeline", "is_open"),
        [Input("open-modal-detecciones-timeline", "n_clicks"), Input("close-modal-detecciones-timeline", "n_clicks")],
        [State("modal-detecciones-timeline", "is_open")]
    )
    def toggle_modal_detecciones_timeline(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal distribuci√≥n de severidad
    @app.callback(
        Output("modal-detecciones-distribucion", "is_open"),
        [Input("open-modal-detecciones-distribucion", "n_clicks"), Input("close-modal-detecciones-distribucion", "n_clicks")],
        [State("modal-detecciones-distribucion", "is_open")]
    )
    def toggle_modal_detecciones_distribucion(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open

    # Callback para modal alertas de detecciones
    @app.callback(
        Output("modal-detecciones-alertas", "is_open"),
        [Input("open-modal-detecciones-alertas", "n_clicks"), Input("close-modal-detecciones-alertas", "n_clicks")],
        [State("modal-detecciones-alertas", "is_open")]
    )
    def toggle_modal_detecciones_alertas(n_open, n_close, is_open):
        if n_open or n_close:
            return not is_open
        return is_open


def register_callbacks(app):
    """Alias para compatibilidad con el sistema de registro global"""
    register_modal_callbacks(app)